-- MySQL Workbench Forward Engineering

--Auto generated by MySQL after designing ER diagram for the database
--Not actually used, only serves as reference for creating the database with the SQLalchemy ORM 

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `user_id` INT NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `name` VARCHAR(200) NOT NULL,
  `password` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`project` (
  `project_id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `description` VARCHAR(400) NOT NULL,
  `completion_status` VARCHAR(50) NULL DEFAULT 'Not Started',
  `created_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `deadline_date` DATE NULL DEFAULT DATEADD(DD, 100, CURRENT_TIMESTAMP),
  `slug` VARCHAR(50) NULL,
  `manager_id` INT NOT NULL,
  PRIMARY KEY (`project_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_project_user1_idx` (`manager_id` ASC) VISIBLE,
  CONSTRAINT `fk_project_user1`
    FOREIGN KEY (`manager_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_project_contribution`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_project_contribution` (
  `user_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `project_id`),
  INDEX `fk_user_project_contribution_project1_idx` (`project_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_project_contribution_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_project_contribution_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `mydb`.`project` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`task` (
  `task_id` INT NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(300) NOT NULL,
  `completion_status` VARCHAR(50) NULL DEFAULT 'Not Started',
  `created_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `deadline_date` DATE NULL DEFAULT DATEADD(DD, 10, CURRENT_TIMESTAMP),
  `created_by_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  PRIMARY KEY (`task_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_task_user1_idx` (`created_by_id` ASC) VISIBLE,
  INDEX `fk_task_project1_idx` (`project_id` ASC) VISIBLE,
  CONSTRAINT `fk_task_user1`
    FOREIGN KEY (`created_by_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_task_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `mydb`.`project` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`task_user_works_on`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`task_user_works_on` (
  `task_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`task_id`, `user_id`),
  INDEX `fk_task_user_works_on_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_task_user_works_on_task1`
    FOREIGN KEY (`task_id`)
    REFERENCES `mydb`.`task` (`task_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_task_user_works_on_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`message` (
  `message_id` INT NOT NULL,
  `message` VARCHAR(200) NOT NULL,
  `created_by_id` INT NOT NULL,
  `task_id` INT NOT NULL,
  PRIMARY KEY (`message_id`),
  INDEX `fk_message_user1_idx` (`created_by_id` ASC) VISIBLE,
  INDEX `fk_message_task1_idx` (`task_id` ASC) VISIBLE,
  CONSTRAINT `fk_message_user1`
    FOREIGN KEY (`created_by_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_task1`
    FOREIGN KEY (`task_id`)
    REFERENCES `mydb`.`task` (`task_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`invitation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`invitation` (
  `invitation_id` INT NOT NULL,
  `accepted` TINYINT NULL DEFAULT 0,
  `user_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  PRIMARY KEY (`invitation_id`),
  INDEX `fk_invitation_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_invitation_project1_idx` (`project_id` ASC) VISIBLE,
  CONSTRAINT `fk_invitation_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_invitation_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `mydb`.`project` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
